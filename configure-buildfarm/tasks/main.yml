---

-
  name: "Include release specific image versions"
  include_vars: ../shared_files/{{ rhmap_version }}.yml
  when: rhmap_version is defined

-
  name: "Setup the directory for productization"
  set_fact:
    groovy_script_dir: ../roles/digger-installer/configure-buildfarm/files
  when: rhmap_version is defined

- name: "Setup directory for for community resources"
  set_fact:
    groovy_script_dir: configure-buildfarm/files
  when: rhmap_version is not defined

-
  name: "Get jenkins url"
  shell: "oc get route jenkins --namespace={{ project_name }} -o jsonpath='{.spec.host}'"
  register: route_output

- pause:
    prompt: |
         The BuildFarm was successfully installed, Do you want to configure your existing RHMAP installation to use the new BuildFarm ?

         If you want to continue please add your current ~/.ssh/id_rsa.pub key here

         {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}/user/{{ jenkins_username | default("admin") }}/configure

         Hit enter to continue or ctrl + c to cancel


- name: "Get the jenkins client cli jar"
  connection: local
  get_url:
    url: "{{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}/jnlpJars/jenkins-cli.jar"
    dest: /tmp/jenkins-cli.jar
    force: yes
    mode: 0775

-
  name: "Create Groovy script from template"
  template:
    src: proxy-config.j2
    dest: "/tmp/proxy-config.groovy"
    force: yes
  connection: local
  register: proxy_task
  when:
    - proxy_host is defined
    - proxy_host != ''
    - proxy_port is defined
    - proxy_port != ''

-
  name: "Configure HTTP Proxy Settings"
  command: java -jar /tmp/jenkins-cli.jar -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/proxy-config.groovy
  when: not proxy_task|skipped
  connection: local

- name: "Read android slave definition"
  set_fact:
    android_slave_image_def: "{{ deployments | selectattr('name', 'match', '^android-slave$') | map(attribute='containers') | list }}"
-
  name: "Get image version"
  set_fact:
    android_slave_image: "{{ android_slave_image_def[0][0].image }}"

-
  name: "Create podtemplate update Groovy script from template"
  template:
    src: podtemplate-config.j2
    dest: "/tmp/podtemplate-config.groovy"
    force: yes
  connection: local

- name: "Configure pod template"
  shell: "java -jar /tmp/jenkins-cli.jar -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy  /tmp/podtemplate-config.groovy"
  connection: local
  register: output
  failed_when: output.stderr != ''

- debug: var=output.stdout
