---

-
  name: "Include release specific image versions"
  include_vars: ../shared_files/{{ rhmap_version }}.yml
  when: rhmap_version is defined
  tags:
    - config

-
  name: "Setup the directory for productization"
  set_fact:
    groovy_script_dir: ../roles/aerogear-digger-installer/configure-buildfarm/files
  when: rhmap_version is defined
  tags:
    - plugins
    - proxy
    - config
    - security

- name: "Setup directory for for community resources"
  set_fact:
    groovy_script_dir: configure-buildfarm/files
  when: rhmap_version is not defined
  tags:
    - plugins
    - proxy
    - config
    - security

-
  name: "Get jenkins url"
  shell: "oc get route jenkins --namespace={{ project_name }} -o jsonpath='{.spec.host}'"
  register: route_output
  changed_when: False
  tags:
    - plugins
    - proxy
    - config
    - security

- name: "Get node public key"
  shell: cat {{ jenkins_public_key_path | default('~/.ssh/id_rsa.pub') }} 
  register: public_key
  tags:
    - plugins
    - proxy
    - config
    - security

- name: "Retrieve Jenkins password from DeploymentConfig"
  command: oc get dc jenkins -o jsonpath='{.spec.template.spec.containers[0].env[?(@.name=="JENKINS_PASSWORD")].value}' --namespace {{ project_name }}
  register: jenkins_password
  tags:
    - plugins
    - proxy
    - config
    - security
  when: jenkins_oauth_token is undefined

- name: "Add SSH public key to the user configuration page automatically"
  uri:
    url: "{{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}/user/{{ jenkins_username | default('admin') }}/configSubmit"
    method: POST
    force_basic_auth: true
    # 'fullName' and 'description' must be specified
    body: "json={\"fullName\": \"Jenkins Admin\", \"description\": \"\", \"userProperty10\": {\"authorizedKeys\": \"{{ public_key.stdout | urlencode }}\"}}"
    validate_certs: no
    user: admin
    password: "{{ jenkins_oauth_token | default(jenkins_password.stdout) }}"
    status_code: 302
  tags:
    - plugins
    - proxy
    - config
    - security
  when: add_public_key_automatically is defined

- pause:
    prompt: |
         Note: The following step is required. Playbook run will fail if skipped.

         Jenkins was successfully installed. In order to configure Jenkins and continue with the installation please add the below public key to the input box 'SSH Public Keys' at the link below:
         {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}/user/{{ jenkins_username | default("admin") }}/configure

         {{ public_key.stdout }}

         After you've added your Public SSH key, hit enter to continue or ctrl + c to cancel.
  tags:
    - plugins
    - proxy
    - config
    - security
  when: add_public_key_automatically is undefined


- name: "Get the jenkins client cli jar"
  get_url:
    url: "{{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}/jnlpJars/jenkins-cli.jar"
    dest: /tmp/jenkins-cli.jar
    force: yes
    mode: 0775
    validate_certs: no
  tags:
    - plugins
    - proxy
    - config
    - security

-
  name: "Create Groovy script from template"
  template:
    src: proxy-config.j2
    dest: "/tmp/proxy-config.groovy"
    force: yes
  register: proxy_task
  when:
    - proxy_host is defined
    - proxy_host != ''
    - proxy_port is defined
    - proxy_port != ''
  tags:
     - proxy

- name: "Read android slave definition"
  set_fact:
    android_slave_image_def: "{{ deployments | selectattr('name', 'match', '^android-slave$') | map(attribute='containers') | list }}"
  tags:
    - config

-
  name: "Get image version"
  set_fact:
    android_slave_image: "{{ android_slave_image_def[0][0].image }}"
  tags:
     - config

-
  name: "Create Kubernetes plugin config update Groovy script from template"
  template:
    src: kubernetes-plugin-config.j2
    dest: "/tmp/kubernetes-plugin-config.groovy"
    force: yes
  tags:
    - config

- name: "Copy configure slave script"
  copy:
     src: "{{ groovy_script_dir }}/configure-slave-subsystem.groovy"
     dest: "/tmp/configure-slave-subsystem.groovy"
     mode: 0755
  tags:
    - config
    - security

- name: "Copy configure plugins script"
  copy:
     src: "{{ groovy_script_dir }}/configure-plugins.groovy"
     dest: "/tmp/configure-plugins.groovy"
     mode: 0755
  tags:
    - config

-
  include: jenkins-passwordless-key.yml
  when: jenkins_private_key_password is not defined

-
  include: jenkins-password-key.yml
  when: jenkins_private_key_password is defined

