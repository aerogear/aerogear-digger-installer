###################################################

# Ideally we would just install the pexpect module directly via yum.
# However the version supplied by the yum repo does not match the version required by Anasible for expect module.
# Revisit if possible

-
  name: "Check if pip is installed"
  command: which pip
  failed_when: False
  changed_when: False
  register: pip_status

-
  name: Install pip via easy_install
  easy_install:
    name: pip
    state: present
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  become: True
  when: pip_status.rc != 0

-
  name: "Install pexpect via pip"
  pip:
    name: pexpect
    state: present
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  become: True

#####################################################
-
  name: "Configure HTTP Proxy Settings"
  expect:
    command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/proxy-config.groovy
    responses:
      'Enter passphrase for .*': "{{ jenkins_private_key_password }}"
  when: not proxy_task|skipped
  no_log: True
  tags:
     - proxy

- name: "Configure Kubernetes plugin"
  expect:
    command: "java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy  /tmp/kubernetes-plugin-config.groovy"
    responses:
      'Enter passphrase for .*': "{{ jenkins_private_key_password }}"
  no_log: True
  tags:
     - config

-
  name: "Enable Agent â†’ Master Access Control"
  expect:
    command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/configure-slave-subsystem.groovy
    responses:
      'Enter passphrase for .*': "{{ jenkins_private_key_password }}"
  register: master_slave_output
  no_log: True
  changed_when: '"Done" in master_slave_output.stdout'
  tags:
    - security

-
  name: "Get list of missing and unmet Jenkins plugins"
  expect:
    command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/configure-plugins.groovy  '{{ jenkins_plugins | to_json | replace('\n', '') }}'
    responses:
      'Enter passphrase for .*': "{{ jenkins_private_key_password }}"
  register: plugins_output
  no_log: True
  changed_when: false
  tags:
    - plugins

-
  name: "Fetch required plugin"
  get_url:
    url: "{{ item.archive }}"
    dest: /tmp/{{item.name}}.hpi
    mode: 0775
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  with_items: "{{ jenkins_plugins }}"
  when: plugins_output.stdout.find(item.name) != -1
  register: fetched_plugins
  notify:
    - remove plugins
  tags:
    - plugins

-
  name: "Install plugins and restart Jenkins server"
  expect:
    command: "java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }} install-plugin /tmp/{{ item.name }}.hpi {{ (item == jenkins_plugins[-1]) | ternary('-restart','') }}"
    responses:
      'Enter passphrase for .*': "{{ jenkins_private_key_password }}"
  with_items: "{{ jenkins_plugins }}"
  when: plugins_output.stdout.find( item.name) != -1
  register: installed_plugins
  no_log: True
  tags:
    - plugins
