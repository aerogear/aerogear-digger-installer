-
  name: "Configure HTTP Proxy Settings"
  command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/proxy-config.groovy
  when: not proxy_task|skipped
  tags:
     - proxy

- name: "Configure Kubernetes plugin"
  shell: "java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy  /tmp/kubernetes-plugin-config.groovy"
  register: output
  failed_when: output.stderr != ''
  tags:
     - config

-
  name: "Enable Agent â†’ Master Access Control"
  command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/configure-slave-subsystem.groovy
  register: master_slave_output
  changed_when: '"Done" in master_slave_output.stdout'
  tags:
    - security

-
  name: "Get list of missing and unmet Jenkins plugins"
  command: java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }}  groovy /tmp/configure-plugins.groovy  '{{ jenkins_plugins | to_json | replace('\n', '') }}'
  register: plugins_output
  changed_when: false
  tags:
    - plugins
-
  name: "Fetch required plugin"
  get_url:
    url: "{{ item.archive }}"
    dest: /tmp/{{item.name}}.hpi
    mode: 0775
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"
  with_items: "{{ jenkins_plugins }}"
  when: plugins_output.stdout.find(item.name) != -1
  register: fetched_plugins
  notify:
    - remove plugins
  tags:
    - plugins

# Leave this task as the last one as it will restart Jenkins
-
  name: "Install plugins and restart Jenkins server"
  command: "java -jar /tmp/jenkins-cli.jar -i {{ jenkins_private_key_path | default(ansible_env.HOME + '/.ssh/id_rsa') }} -remoting -s {{ jenkins_route_protocol | default('https') }}://{{ route_output.stdout }} install-plugin /tmp/{{ item.name }}.hpi {{ (item == jenkins_plugins[-1]) | ternary('-restart','') }}"
  with_items: "{{ jenkins_plugins }}"
  when: plugins_output.stdout.find( item.name) != -1
  register: installed_plugins
  tags:
    - plugins
