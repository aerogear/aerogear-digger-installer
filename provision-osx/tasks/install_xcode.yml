---

-
  name: Get current user groups
  shell: groups
  args:
    executable: /bin/bash
  changed_when: False
  register: user_groups

-
  name: Ensure passwordless sudo for user
  become: yes
  replace:
    dest: /etc/sudoers
    regexp: '^# %wheel ALL=\(ALL\) NOPASSWD: ALL'
    replace: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

-
  name: Add sudoers users to wheel group
  become: yes
  user:
    name: "{{ ansible_ssh_user }}"
    groups: wheel
    append: yes

-
  name: Check if ruby_domain_name gem is already installed
  shell: "gem list -i '^domain_name$'"
  args:
    executable: /bin/bash
  register: ruby_domain_name_installed

-
  name: Copy ruby_domain_name gem to remote host
  copy:
     src: "{{ruby_domain_name_file_path}}"
     dest: "{{remote_tmp_dir}}/{{ruby_domain_name_gem_name}}"
     mode: 0755
  when: ruby_domain_name_installed.rc != 0

-
  name: Install ruby_domain_name gem
  shell: "gem install {{remote_tmp_dir}}/{{ruby_domain_name_gem_name}}"
  args:
    executable: /bin/bash
  become: yes
  when: ruby_domain_name_installed.rc != 0

-
  name: Install xcode-install gem package
  shell: "gem install --conservative --no-ri --no-rdoc xcode-install -v {{ xcode_install_version | default('\"\"') }}"
  args:
    executable: /bin/bash
  become: yes
  environment:
    http_proxy: "{{ proxy_url | default('') }}"
    https_proxy: "{{ proxy_url | default('') }}"

-
  name: Install command line tools
  shell: source ~/.bash_profile && xcversion install-cli-tools
  args:
    executable: /bin/bash
  register: xcode_cli_tools_install
  when: xcode_install_user is defined and xcode_install_password is defined
  failed_when: xcode_cli_tools_install.rc != 0 and xcode_cli_tools_install.stdout.find('already installed') == -1
  changed_when: xcode_cli_tools_install.stdout.find('already installed') == -1
  environment:
    XCODE_INSTALL_USER: "{{ xcode_install_user }}"
    XCODE_INSTALL_PASSWORD: "{{ xcode_install_password }}"
    FASTLANE_SESSION: "{{ xcode_install_session_token | default(omit) }}"

- debug:
    msg: "Installing Xcode ({{ xcode_versions | join(', ') }}). This may take over 30 minutes for each version. Please be patient."

# Check here for versions already installed
-
  name: Install xcode versions
  shell: "source ~/.bash_profile && xcversion install {{ item }}"
  args:
    executable: /bin/bash
  with_items: "{{ xcode_versions }}"
  when: xcode_install_user is defined and xcode_install_password is defined
  register: xcode_install
  failed_when: xcode_cli_tools_install.rc != 0 and xcode_cli_tools_install.stdout.find('already installed') == -1
  changed_when: xcode_cli_tools_install.stdout.find('already installed') == -1
  environment:
    XCODE_INSTALL_USER: "{{ xcode_install_user }}"
    XCODE_INSTALL_PASSWORD: "{{ xcode_install_password }}"

-
  name: Remove passwordless sudo for user
  become: yes
  replace:
    dest: /etc/sudoers
    regexp: '^%wheel ALL=\(ALL\) NOPASSWD: ALL'
    replace: '# %wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

-
  name: Restore user groups
  become: yes
  user:
    name: "{{ ansible_ssh_user }}"
    groups: "{{ user_groups.stdout.split(' ') | join(',') }}"
    append: no